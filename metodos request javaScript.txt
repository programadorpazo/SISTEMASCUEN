
function RequestServer(methodUrl, url, callBackServer, text) {
    var xhr = new XMLHttpRequest();
    xhr.open(methodUrl, url);
    xhr.onreadystatechange = function () {
        if (xhr.status == 200 && xhr.readyState == 4) {
            callBackServer(xhr.response);
        }
    }
    if (methodUrl == "get") {
        xhr.send();
    } else {
        if (text != "" && text != null) {
            xhr.send(text);
        }
    }
}

=================================================================================


function sendRequest(url, params, callback, method) {
    httpRequest = getXMLHttpRequest();
    var httpMethod = method ? method : 'GET';
    if (httpMethod !== 'GET' && httpMethod !== 'POST') {
        httpMethod = 'GET';
    }
    var httpParams = (params === null || params === '') ? null : params;
    var httpUrl = url;
    if (httpMethod === 'GET' && httpParams !== null) {
        httpUrl = httpUrl + "?" + httpParams;
    }
    httpRequest.open(httpMethod, httpUrl, true);
    httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    httpRequest.onreadystatechange = callback;
    httpRequest.send(httpMethod === 'POST' ? httpParams : null);
}


function Get(url, params, callback) {
    //var params = null;
    //var params = "id=" + encodeURIComponent("");
    sendRequest(url + ".aspx", params, callback, "GET");
}
function Send(url, params, callback) {
    //var params = null;
    //var params = "id=" + encodeURIComponent("");
    sendRequest(url + ".aspx", params, callback, "POST");
}


function ReplaceAll(str, find, replace) {
    return str.replace(new RegExp(find, 'g'), replace);
}

function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}



function getXMLHttpRequest() {
    if (window.ActiveXObject) {
        try {
            return new ActiveXObject("Msxml2.XMLHTTP");
        } catch (e) {
            try {
                return new ActiveXObject("Microsoft.XMLHTTP");
            } catch (e1) {
                return null;
            }
        }
    } else if (window.XMLHttpRequest) {
        return new XMLHttpRequest();
    } else {
        return null;
    }
}

public bool submitEmail(string email, string subject, string body, bool isBodyHtml,string ruta,string userName)
        {
            try
            {
                SmtpClient server = new SmtpClient("cieneguillariberadelrio.com", 587);
                // Crea el mensaje estableciendo quién lo manda y quién lo recibe
                //Envía el mensaje.
                server.Credentials = new System.Net.NetworkCredential("knava@cieneguillariberadelrio.com", "Sistemas1");
                server.EnableSsl = true;
                //Añade credenciales si el servidor lo requiere.
                MailMessage mnsj = new MailMessage();
                mnsj.Subject = subject;
                mnsj.IsBodyHtml = true;
                mnsj.To.Add(new MailAddress(email));
                mnsj.To.Add(new MailAddress("ofimatica_socios@inresorts.club"));
                mnsj.From = new MailAddress("knava@cieneguillariberadelrio.com", "Kevin Nava");
                /* Si deseamos Adjuntar algún archivo*/
                mnsj.Body = body;
                
                Attachment _attachment = new Attachment(ruta + "CON" + userName + ".pdf");
                mnsj.Attachments.Add(_attachment);
                Attachment _attachment2 = new Attachment(ruta + "CER" + userName + ".pdf");
                mnsj.Attachments.Add(_attachment2);
                Attachment _attachment3 = new Attachment(ruta + "RCI" + userName + ".pdf");
                mnsj.Attachments.Add(_attachment3);
                Attachment _attachment4 = new Attachment(ruta + "CRO" + userName + ".pdf");
                mnsj.Attachments.Add(_attachment4);
                Attachment _attachment5 = new Attachment(ruta + "PAG" + userName + ".pdf");
                mnsj.Attachments.Add(_attachment5);

                Attachment _attachment6 = new Attachment(ruta + "PLAN_COMPENSACION_INRESORTS" + ".pdf");
                mnsj.Attachments.Add(_attachment6);
                Attachment _attachment7 = new Attachment(ruta + "Plan_beneficios_riberadelrio_inResorts" + ".pdf");
                mnsj.Attachments.Add(_attachment7);
                Attachment _attachment8 = new Attachment(ruta + "Reglamento_de_Ética_inResorts" + ".pdf");
                mnsj.Attachments.Add(_attachment8);

                server.Send(mnsj);
                return true;
            }
            catch (Exception e)
            {
                return false;
            }        
        }